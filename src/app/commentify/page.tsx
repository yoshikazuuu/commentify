"use client";
import { useState } from "react";

import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { HiDotsVertical } from "react-icons/hi";
import { TiChevronLeft } from "react-icons/ti";
import { FiSettings } from "react-icons/fi";
import { HiPaperAirplane, HiPaperClip } from "react-icons/hi2";
import { CopyBlock } from "react-code-blocks";
import { Code } from "@/components/code-blocks";
import ScrollToBottom from "react-scroll-to-bottom";

import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

import {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";

import Image from "next/image";
import { Input } from "@/components/ui/input";
import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import { useSearchParams } from "next/navigation";
import { CodeType } from "@/types/code";

export default function Commentify() {
  const [isOpen, setIsOpen] = useState(false);
  const path = useSearchParams();

  const isMock = path.get("mock");

  const themes = [
    { color: "#000000", theme: "dark" },
    { color: "#FFFFFF", theme: "light" },
    { color: "#007ACC", theme: "blue" },
    { color: "#FF5733", theme: "orange" },
    { color: "#4CAF50", theme: "green" },
    { color: "#9B59B6", theme: "purple" },
    { color: "#E74C3C", theme: "red" },
    { color: "#F39C12", theme: "yellow" },
    { color: "#3498DB", theme: "cyan" },
  ];

  const rawCode: CodeType = {
    text: `function exampleFunction(param) {
      // Actual function logic here
    }`,
    language: "javascript",
    showLineNumbers: true,
  };

  const commentedCode: CodeType = {
    text: `// Comment generated by Commentify
// Commentify: Unlocking clarity in code documentation.
// Your code, beautifully commented.

/**
 * Placeholder comment for an example function.
 * 
 * @param {any} param - Description of the parameter.
 * @returns {any} Description of the return value.
 */
function exampleFunction(param) {
    // Actual function logic here
}
    `,
    language: "javascript",
    showLineNumbers: true,
  };

  return (
    <div className="flex">
      {!isOpen && (
        <div
          onClick={() => {
            setIsOpen(!isOpen);
            console.log(isOpen);
          }}
          className={`absolute h-screen ${
            isOpen ? `hidden` : `w-20`
          } z-10 flex h-screen cursor-pointer flex-col items-center justify-between bg-gray-900 p-4 transition-all duration-300 ease-in-out`}
        >
          <Image src="/logo.png" height={40} width={40} alt="" />
          <Avatar>
            <AvatarImage src="https://github.com/yoshikazuuu.png" />
            <AvatarFallback>Y</AvatarFallback>
          </Avatar>
        </div>
      )}
      <div
        className={cn(
          `h-screen bg-gray-900 transition-all duration-300 ease-in-out`,
          isOpen ? `w-80` : `w-20`,
        )}
      >
        {isOpen && (
          <div className="flex h-full flex-col items-center justify-between gap-2 p-2">
            <section id="title" className="w-full">
              <div className="grid gap-2">
                <div className="flex items-center justify-center">
                  <Image src="/logo.png" height={40} width={40} alt="" />
                  <p className="font-bold text-foreground">COMMENTIFY</p>
                </div>
                <Input type="text" className="w-full" placeholder="Search..." />
              </div>
            </section>

            {/* <section id="channels" className="w-full"></section> */}

            {/* <section
              id="settings"
              className="flex w-full flex-1 items-end justify-self-end"
            >
              <div className="flex w-full cursor-pointer items-center gap-2 rounded-md p-2 hover:bg-gray-700">
                <FiSettings />
                <p className="leading-none text-muted-foreground">Settings</p>
              </div>
            </section> */}

            <section
              id="user"
              className="flex w-full items-center justify-between gap-4 rounded-md bg-background p-2 hover:bg-gray-700"
            >
              <Dialog>
                <DialogContent>
                  <DialogHeader>
                    <DialogTitle>Theme</DialogTitle>
                    <DialogDescription>
                      Set your preferred theme
                    </DialogDescription>
                    <DialogDescription>
                      <div className="grid grid-cols-3 gap-2">
                        {themes.map((theme) => (
                          <Button
                            key={theme.theme}
                            className="cursor-pointer rounded-full hover:opacity-75"
                            style={{ backgroundColor: theme.color }}
                          >
                            {theme.theme}
                          </Button>
                        ))}
                      </div>
                    </DialogDescription>
                  </DialogHeader>
                  <DialogClose>
                    <Button>Close</Button>
                  </DialogClose>
                </DialogContent>
                <DropdownMenu>
                  <DropdownMenuContent className="w-[19rem]" sideOffset={18}>
                    <DropdownMenuItem>Clear All</DropdownMenuItem>
                    <DropdownMenuItem>Billing</DropdownMenuItem>
                    <DropdownMenuItem>
                      <DialogTrigger className="w-full text-left">
                        Settings
                      </DialogTrigger>
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem>
                      <Link href="/" className="w-full">
                        Logout
                      </Link>
                    </DropdownMenuItem>
                  </DropdownMenuContent>

                  <DropdownMenuTrigger className="flex w-full items-center justify-between gap-4 focus:outline-0 ">
                    <Avatar>
                      <AvatarImage src="https://github.com/yoshikazuuu.png" />
                      <AvatarFallback>Y</AvatarFallback>
                    </Avatar>
                    <div className="flex flex-col gap-1">
                      <p className="text-sm font-medium leading-none">
                        Yoshikazuuu
                      </p>
                      <p className="text-xs leading-none text-muted-foreground">
                        yoshikazuuu@example.com
                      </p>
                    </div>
                    <div className="cursor-pointer rounded-md p-3 ">
                      <HiDotsVertical />
                    </div>
                  </DropdownMenuTrigger>
                </DropdownMenu>
              </Dialog>
            </section>
          </div>
        )}
      </div>

      <div
        className={cn(
          "fixed left-20 top-1/2 z-20 transition-all duration-300 ease-in-out",
          isOpen ? ` translate-x-60` : `-translate-x-0`,
        )}
      >
        <div
          onClick={() => setIsOpen(!isOpen)}
          className={cn(
            "transform cursor-pointer p-2 opacity-25 transition-transform duration-300 ease-in-out hover:rotate-180 hover:opacity-100",
            isOpen && `rotate-180`,
          )}
        >
          <TiChevronLeft />
        </div>
      </div>

      <div className="flex h-screen flex-1 flex-col items-center justify-between py-10">
        <ScrollToBottom className="h-[85dvh]">
          <section id="chat" className="flex justify-center">
            {isMock && (
              <div className="mx-10 my-4 flex max-w-3xl flex-1 flex-col justify-center gap-4">
                <div className="flex items-center gap-2">
                  <Avatar>
                    <AvatarImage src="https://github.com/yoshikazuuu.png" />
                    <AvatarFallback>Y</AvatarFallback>
                  </Avatar>
                  <div className="flex flex-col gap-1">
                    <p className="text-sm font-medium leading-none">
                      Yoshikazuuu
                    </p>
                    <p className="text-xs leading-none text-muted-foreground">
                      {new Date().toLocaleString()}
                    </p>
                  </div>
                </div>
                <p className="">
                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro
                  incidunt dolorum atque tempore, perferendis autem neque
                  sapiente facilis voluptates itaque praesentium rerum quod
                  temporibus ea cum eos, assumenda odio tempora.
                </p>
                <Code {...rawCode} />
                <div className="h-0 max-w-3xl border" />

                <div className="flex items-center gap-2">
                  <Avatar>
                    <AvatarImage src="logo.png" />
                    <AvatarFallback>C</AvatarFallback>
                  </Avatar>
                  <div className="flex flex-col gap-1">
                    <p className="text-sm font-medium leading-none">
                      Commentify
                    </p>
                    <p className="text-xs leading-none text-muted-foreground">
                      {new Date().toLocaleString()}
                    </p>
                  </div>
                </div>
                <p className="">
                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro
                  incidunt dolorum atque tempore, perferendis autem neque
                  sapiente facilis voluptates itaque praesentium rerum quod
                  temporibus ea cum eos, assumenda odio tempora.
                </p>
                <Code {...commentedCode} />
              </div>
            )}
          </section>
        </ScrollToBottom>
        <section id="input" className="flex items-center gap-4">
          <Button variant="outline">
            <HiPaperClip />
          </Button>
          <Input placeholder="Message..." className="w-[50vw]" type="text" />
          <Link href="/commentify?mock=true">
            <Button variant="outline">
              <HiPaperAirplane />
            </Button>
          </Link>
        </section>
      </div>
    </div>
  );
}
